
섹션 1: IoT 생태계, 딥 러닝 기술 및 프레임워크
Hands-On Deep Learning Application Development for IoT
1. IoT의 엔드 투 엔드 라이프 사이클
	IoT의 수명 주기
		3계층 E2E IoT 수명 주기
		5계층 IoT E2E 수명 주기
		IoT 시스템 아키텍처
	IoT 애플리케이션 도메인
	IoT에서 분석의 중요성
	IoT 데이터 분석에서 DL을 사용하려는 동기
	IoT 데이터의 주요 특성 및 요구사항
		빠르고 스트리밍하는 IoT 데이터의 실제 사례
		IoT 빅 데이터의 실제 사례

2. iot를 위한 딥러닝 아키텍쳐
	ML에 대한 부드러운 소개
		학습 알고리즘의 작동 원리
		일반 ML 경험칙
		ML 모델의 일반적인 문제
	ML 태스크
		지도학습
		비지도 학습
		강화학습
		응용프로그램을 사용한 학습 유형
	DL 자세히 보기
		DL은 어떻게 ML을 다음 단계로 끌어올렸습니까?
	인공신경망
		ANN과 인간의 뇌
		ANN의 간략한 이력
		ANN은 어떻게 학습하나요?
			신경망 교육
			가중치 및 바이어스 초기화	
			활성화 기능
	신경망 아키텍처
		심층 신경망
		오토인코더
		컨볼루션 신경망
		순환 신경망
		신흥 아키텍처
			잔류 신경망
			생성적 적대 네트워크
			캡슐 네트워크
		클러스터링 분석을 위한 신경망
	사물인터넷을 위한 DL 프레임워크 및 클라우드 플랫폼
	요약

섹션 2 : IoT를 위한 실습 딥러닝 애플리케이션 개발
3. IoT에서 이미지 인식
	IoT 애플리케이션 및 이미지 인식
	사례 1. 2013; 이미지 기반 자동 장애 감지
		사례 1 구현
	사례 2. 2013; 이미지 기반 스마트 고체 폐기물 분리
		사례 2 구현


IoT에서 이미지 인식을 위한 전이 학습
IoT 애플리케이션에서 이미지 인식을 위한 CNN
	사례 1에 대한 데이터 수집
	사례 1에서 데이터 세트 탐색
	사례 2에 대한 데이터 수집
	사례 2의 데이터 탐색
		데이터 전처리
		모델 학습
		모델 평가
		모델 성능(사용 사례 1)
		모델 성능(사용 사례 2)
		요약
		참조

4. IoT에서 오디오/음성/음성 인식
	IoT를 위한 음성/음성 인식
	사례 1. 2013; 음성 제어 스마트 조명
		사례 1 구현
	사례 2. 2013; 음성 제어 홈 액세스
		사례 2 구현
	IoT에서 사운드/오디오 인식을 위한 DL
		ASR 시스템 모델
		ASR에서 피쳐 추출
		ASR용 DL 모델
	IoT 애플리케이션에서 음성 인식을 위한 CNN 및 전송 학습
	데이터 수집
		데이터 탐색
	데이터 전처리
	모델 학습
	모델 평가
		모델 성능(사용 사례 1)
		모델 성능(사용 사례 2)
	요약		
	참조

5. IoT의 실내 현지화
	실내 현지화 개요
		실내 국산화 기법
		지문 채취	
	사물인터넷을 위한 DL 기반 실내 현지화
		K-근접 이웃(k-NN) 분류기
		AE 분류기
	예제 2013; Wi-Fi 지문 채취를 통한 실내 현지화
		데이터 집합 설명
		네트워크 구축
		실행
			탐색적 분석
			훈련 및 테스트 세트 준비
			AE 생성
			AE 분류기 생성
			훈련된 모델 저장
			모델 평가
	배포 기법
	요약

6. IoT에서 생리적, 심리적 상태 감지
	IoT 기반 인간 생리적, 심리적 상태 감지
	사례 1 2013; 물리치료의 원격 경과 모니터링
		사례 1의 구현
	사례 2 2014; IoT 기반 스마트 교실
		사례 2의 구현
	IoT에서 인간 활동 및 감정 감지를 위한 딥 러닝
		인간 활동 자동 인식 시스템
		인간 감정 자동 감지 시스템
		HAR 및 감정 감지를 위한 딥 러닝 모델
	IoT 애플리케이션에서 HAR/FER에 대한 LSTM, CNN 및 전송 학습
	데이터 수집
	데이터 탐색
	데이터 전처리
	모델 학습
		사례 1
		사례 2
	모델평가
		모델 성능(사례 1)
		모델 성능(사례 2)
	요약


7. IoT 보안
	IoT 및 탐지의 보안 공격
		이상 징후 감지 및 IoT 보안
	사례 1: IoT의 지능형 호스트 침입 탐지
		사용 사례 1의 구현
	사례 2: 트래픽 기반 &#xA0; 지능형 네트워크 침입 탐지 사물인터넷
		사례 2의 구현
	IoT 보안 사고 감지를 위한 DL
		IoT 보안 사고 감지에서 DNN, 자동 인코더 및 LSTM
	데이터 수집
		CPU 사용률 데이터
		KDD 컵 1999 IDS 데이터 세트
		데이터 탐색
	데이터 전처리
	모델 훈련
		사례 1
		사례 2
	모델 평가
		모델 성능(사례 1)
		모델 성능(사례 2)
	요약
	참조

3. 섹션 3: IoT의 고급 측면 및 분석

8. IoT를 위한 예측 유지보수
	IoT를 위한 예측 유지보수
		산업 환경에서 IoT 데이터 수집
		예측 유지보수를 위한 ML 기법
	예제 2013; 항공기 가스터빈 엔진 PM
		데이터 집합 설명
		탐색적 분석
		고장 모드 검사
		예측 과제
	RLU 예측을 위한 DL
		컷오프 시간 계산
		심층 형상 합성
		ML 베이스라인
		예측하기
		LSTM을 통한 MAE 개선
		감독되지 않은 심층 형상 합성
	FAQs
	요약

9. 의료 IoT에 대한 딥러닝
	의료 분야의 IoT
	사례 1. 2013; 만성 질환 원격 관리
		사례 1의 구현
	사례 2. 2013; 여드름 감지 및 관리를 위한 IoT
		사례 2 구현
	의료용 DL
		의료 애플리케이션의 CNN 및 LSTM
	데이터 수집
		사례 1
		사례 2
	데이터 탐색
		심전도 데이터 세트
		여드름 데이터 세트
	데이터 전처리
	모델 훈련
		사례 1
		사례 2
	모델 평가
		모델 성능(사례 1)
		모델 성능(사례 2)
	요약
	참조

10. 다음은 무엇인가 - 마무리와 미래 방향
	우리가 이 책에서 다룬 것은 무엇인가?
	자원이 제한된 IoT 장치에서 DL 솔루션의 구축 과제
		머신러닝/DL 관점
		DL 제한
		IoT 장치, 에지/안개 컴퓨팅 및 클라우드 관점
	리소스가 제한된 IoT 장치에서 DL을 지원하는 기존 솔루션
	잠재적인 미래 솔루션
	요약
	참조



서문

사물인터넷(IoT) 시대에, 엄청난 수의 감지 장치가 광범위한 응용을 위해 시간이 지남에 따라 다양한 감각 데이터를 수집하고 생성한다. 

이 데이터는 주로 애플리케이션을 기반으로 하는 대규모, 고속 및 실시간 스트림으로 구성됩니다. 

이러한 빅 데이터 또는 데이터 스트림과 관련하여 분석을 사용하는 것은 새로운 정보를 학습하고, 미래의 통찰력을 예측하고, 정보에 입각한 의사 결정을 내리는 데 중요하며, 이는 IoT를 기업에 가치 있는 패러다임이자 삶의 질 향상 기술로 만든다.

이 책은 다양한 IoT 애플리케이션에서 분석과 학습을 용이하게 하기 위해 딥 러닝(DL)이라는 고급 기계 학습 기술의 클래스에 대한 전체 개요를 제공합니다. 

데이터 수집, 분석, 모델링 및 모델의 성능 평가에서 다양한 IoT 애플리케이션 및 배포 설정에 이르기까지 각 프로세스가 무엇인지에 대한 실제 개요가 제공됩니다.

이미지 기반 도로 결함 감지 및 스마트 가비지 분리를 위한 애플리케이션을 개발하기 위한 컨볼루션 신경망(CNN)을 훈련하는 방법을 배운 후, 음성 시작 스마트 조명 제어 및 반복 신경망(RNN)으로 구동되는 홈 액세스 메커니즘을 구현한다.

예측 가능한 실내 현지화를 위한 IoT 애플리케이션을 마스터할 수 있습니다.
자동 인코더, DeepFi 및 LSTM 네트워크를 사용하여 대규모 병원에서 장비를 유지보수하고 위치를 파악합니다. 

또한 IoT 보안이 강화된 헬스케어를 위한 IoT 애플리케이션 개발도 배울 수 있다. 

이 책을 읽은 후, 당신은 IoT 가능 장치를 위한 더 복잡한 DL 애플리케이션을 개발하는 데 유리한 출발을 할 것이다.

마지막으로 중요한 것은, 이 책은 처음부터 끝까지 읽기 위한 것이 아니라는 것이다. 

당신은 당신이 성취하고자 하는 것처럼 보이거나 당신의 흥미를 돋우는 장으로 페이지를 돌릴 수 있다. 

만약 당신이 어떤 오류나 명백한 누락을 발견한다면, 우리에게 알려주거나 이 책의 GitHub repo에 문제를 제기하는 것보다 오류를 범하는 것이 낫다.

----
이 책은 DL 기술을 사용하여 TensorFlow, Keras 및 Chainer의 힘으로 IoT가 생성하는 빅 및 실시간 데이터 스트림을 분석하고 이해하고자 하는 모든 사람을 대상으로 합니다.

만약 당신이 작동하고 미래의 현명한 결정을 예측할 수 있는 광범위한 IoT 애플리케이션을 만들고 싶다면, 이 책이 당신에게 필요한 것이다!

따라서, 이 책은 복잡한 수치 계산에 대한 경험이 많지는 않지만 실제로 DL이 무엇인지 알고 싶어하는 IoT 애플리케이션 개발자, 데이터 분석가 또는 DL 매니아들을 위한 것이다.

-----
이 책이 다루는 것

1장, IoT의 엔드 투 엔드 라이프 사이클에서는 IoT의 엔드 투 엔드 라이프 사이클과 그와 관련된 개념 및 구성 요소뿐만 아니라 IoT에서 DL의 사용을 요구하는 IoT 데이터의 주요 특성 및 문제에 대해 논의합니다.

또한 IoT에서 분석의 중요성과 데이터 분석에서 DL을 사용하는 동기도 다룬다.

2장, IoT용 딥 러닝 아키텍처는 이후의 모든 장에서 사용될 DL 아키텍처와 플랫폼의 기본 개념을 제공한다.

기계 학습(ML)에 대한 간략한 소개로 시작하여 데이터에서 높은 수준의 추상화를 모델링하려는 일련의 알고리듬을 기반으로 하는 ML의 한 분야인 DL로 이동할 것이다.

우리는 가장 잘 알려져 있고 널리 사용되는 신경망 아키텍처 중 일부에 대해 간략하게 논의할 것이다.

마지막으로, IoT 지원 장치에서 DL 애플리케이션을 개발하는 데 사용될 DL 프레임워크와 라이브러리의 다양한 기능에 대해 논의할 것이다.

3장 IoT에서의 이미지 인식은 IoT에서의 실제 이미지 데이터 처리 애플리케이션 개발을 다룬다.

첫째, 다양한 IoT 애플리케이션과 이미지 감지 기반 의사 결정에 대해 간략하게 설명한다.

또한 이 장에서는 두 가지 IoT 애플리케이션과 실제 시나리오에서 이미지 감지 기반 구현에 대해 간략하게 설명합니다. 이 장의 두 번째 부분에서, 우리는 DL 알고리듬을 사용하여 애플리케이션의 실제 이미지 감지 구현을 제시할 것이다.

4장 IoT의 오디오/음성/음성 인식은 다양한 IoT 애플리케이션과 음성/음성 인식 기반 의사 결정에 대해 간략하게 설명합니다.

또한, 실제 시나리오에서 두 가지 IoT 애플리케이션과 음성/음성 인식 기반 구현에 대해 간략하게 논의할 것이다.

이 장의 두 번째 부분에서, 우리는 DL 알고리듬을 사용하여 애플리케이션의 실제 음성/음성 감지 구현을 제시할 것이다.


2장, IoT용 딥 러닝 아키텍처는 이후의 모든 장에서 사용될 DL 아키텍처와 플랫폼의 기본 개념을 제공한다.

기계 학습(ML)에 대한 간략한 소개로 시작하여 데이터에서 높은 수준의 추상화를 모델링하려는 일련의 알고리듬을 기반으로 하는 ML의 한 분야인 DL로 이동할 것이다.

우리는 가장 잘 알려져 있고 널리 사용되는 신경망 아키텍처 중 일부에 대해 간략하게 논의할 것이다.

마지막으로, IoT 지원 장치에서 DL 애플리케이션을 개발하는 데 사용될 DL 프레임워크와 라이브러리의 다양한 기능에 대해 논의할 것이다.

3장 IoT에서의 이미지 인식은 IoT에서의 실제 이미지 데이터 처리 애플리케이션 개발을 다룬다.

첫째, 다양한 IoT 애플리케이션과 이미지 감지 기반 의사 결정에 대해 간략하게 설명한다.

또한 이 장에서는 두 가지 IoT 애플리케이션과 실제 시나리오에서 이미지 감지 기반 구현에 대해 간략하게 설명합니다. 이 장의 두 번째 부분에서, 우리는 DL 알고리듬을 사용하여 애플리케이션의 실제 이미지 감지 구현을 제시할 것이다.

4장 IoT의 오디오/음성/음성 인식은 다양한 IoT 애플리케이션과 음성/음성 인식 기반 의사 결정에 대해 간략하게 설명합니다.

또한, 실제 시나리오에서 두 가지 IoT 애플리케이션과 음성/음성 인식 기반 구현에 대해 간략하게 논의할 것이다.

이 장의 두 번째 부분에서, 우리는 DL 알고리듬을 사용하여 애플리케이션의 실제 음성/음성 감지 구현을 제시할 것이다.

제5장 IoT의 실내 현지화는 일반적으로 실제 사례의 도움을 받아 IoT 애플리케이션의 실내 현지화에 DL 기술을 사용할 수 있는 방법을 논의한다.

DL 모델을 이용해 와이파이 지문 데이터를 분석해 기기나 실내 환경에서 사용자의 위치를 예측하는 등 이들 기기와 기술로부터 데이터를 수집하는 방법을 논의한다.

우리는 또한 IoT 환경에서 실내 현지화 서비스의 배치 설정에 대해 논의할 것이다.

제5장 IoT의 실내 현지화는 일반적으로 실제 사례의 도움을 받아 IoT 애플리케이션의 실내 현지화에 DL 기술을 사용할 수 있는 방법을 논의한다. 

DL 모델을 이용해 와이파이 지문 데이터를 분석해 기기나 실내 환경에서 사용자의 위치를 예측하는 등 이들 기기와 기술로부터 데이터를 수집하는 방법을 논의한다. 

우리는 또한 IoT 환경에서 실내 현지화 서비스의 배치 설정에 대해 논의할 것이다.

제6장 IoT에서의 생리적 및 심리적 상태 감지는 일반적으로 IoT 애플리케이션을 위한 DL 기반의 인간 생리적 및 심리적 상태 감지 기술을 제시한다. 

이 장의 첫 번째 부분은 다양한 IoT 애플리케이션과 생리적 및 심리적 상태의 탐지를 기반으로 하는 의사 결정 능력에 대해 간략하게 설명할 것이다. 

또한 실제 시나리오에서 두 가지 IoT 애플리케이션과 생리적, 심리적 상태 감지 기반 구현에 대해 간략하게 논의할 것이다. 

이 장의 두 번째 부분에서, 우리는 DL 알고리듬을 사용하여 응용 프로그램의 실제 생리적 및 심리적 상태 감지 구현을 제시할 것이다.

제7장 IoT 보안은 일반적으로 IoT 애플리케이션에 대한 보안 사고 감지 기술과 함께 DL 기반 네트워크 및 장치의 행동 데이터 분석을 제시한다. 

이 장의 첫 번째 부분은 DL/ML 기반 공격을 포함하여 다양한 IoT 보안 공격과 잠재적인 탐지 기술에 대해 간략하게 설명할 것이다. 

또한 DL 기반 이상 탐지를 통해 보안 공격(DoS 공격, DDoS 등)을 지능적이고 자동으로 탐지할 수 있는 두 가지 IoT 사용 사례에 대해 간략히 논의한다.

이 장의 두 번째 부분에서, 우리는 DL 기반 보안 사고 탐지 구현의 실제 사례를 제시할 것이다.

8장 IoT를 위한 예측 유지보수는 터보팬 엔진 열화 시뮬레이션 데이터 세트를 사용하여 IoT를 위한 예측 유지보수를 위한 DL 솔루션을 개발하는 방법을 설명한다. 

예측 유지보수의 개념은 다양한 유형의 고장 패턴을 예측할 수 있는지 여부를 결정하는 것입니다.

예측 유지보수를 목적으로 IoT가 가능한 장치에서 데이터를 수집하는 방법에 대해서도 논의할 것이다.

9장 의료 IoT의 딥 러닝은 일반적으로 의료를 위한 DL 기반 IoT 솔루션을 제시한다.

이 장의 첫 번째 부분에서는 의료 분야에서 IoT의 다양한 애플리케이션에 대한 개요를 제시하고, 잘 지원되는 IoT 솔루션을 통해 의료 서비스를 개선 및/또는 자동화할 수 있는 두 가지 사용 사례에 대해 간략하게 논의할 것이다. 

이 장의 두 번째 부분에서는 두 가지 사용 사례의 DL 기반 의료 사고 및/또는 질병 감지 부분에 대한 실제 경험을 제시한다.

10장, What's Next – Lapping Up and Future Directions는 이전 장들의 요약을 제시한 다음, 자원이 제한되고 내장된 IoT 환경에 대한 개발 및 구현에서 기존 DL 기술이 직면한 주요 과제를 사례와 함께 논의한다. 

마지막으로, 우리는 여러 기존 솔루션을 요약하고 DL 기반 IoT 분석을 위한 기존 격차를 채울 수 있는 몇 가지 잠재적인 솔루션 방향을 지적한다.

---
https://www.packtpub.com/support/errata
https://github.com/packtpublishing/hands-on-deep-learning-for-iot
https://github.com/PacktPublishing/


사용된 규칙

이 책에는 여러 가지 텍스트 규칙이 사용됩니다.

CodeIntext: 
텍스트, 데이터베이스 테이블 이름, 폴더 이름, 파일 이름, 파일 확장명, 경로 이름, 더미 URL, 사용자 입력 및 Twitter 핸들의 코드 단어를 나타냅니다. 

예를 들어, "탐색을 위해, 우리는 다음과 같이 데이터 세트에서 image_explor.py를 실행할 수 있다." 코드 블록은 다음과 같이 설정된다.

====
p33
Section 1: IoT Ecosystems, Deep Learning Techniques, and Frameworks
이번 섹션에서는 IoT 데이터(즉, 실시간 빅데이터)의 핵심 특성인 IoT 생태계에 대해 간략히 살펴보겠습니다. 

데이터에 분석이 필요한 이유와 분석에 딥 러닝(DL)이 중요한 이유를 설명한다. 

우리는 또한 다양한 기술, 그들의 모델과 아키텍처, 그리고 IoT 애플리케이션 영역에서의 적합성을 조사할 것이다.

==
p34
사물인터넷(IoT)은 다양한 물리적 장치 및 환경에 쉽게 액세스하고 상호 작용할 수 있도록 함으로써 건강 및 의료, 지능형 에너지 관리 및 스마트 그리드, 교통, 교통 관리 등과 같은 다양한 영역에서 다양한 애플리케이션의 개발을 촉진할 것이다. 

이러한 애플리케이션은 빅 및 실시간/스트리밍 데이터를 생성하므로 유용한 정보를 추출하고 정보에 입각한 결정을 내리려면 고급 기계 학습, 즉 딥 러닝(DL)을 포함한 빅 데이터 분석 도구가 필요하다. 

IoT 응용 프로그램의 생성된 데이터에 고급 기계 학습 기술을 적용하려면 IoT와 그 다양한 구성 요소의 엔드 투 엔드(E2E) 수명 주기를 이해해야 한다.

이 챕터에서는 IoT의 E2E 라이프 사이클과 관련 개념 및 구성 요소에 대해 논의합니다. 

우리는 IoT에서 DL의 사용을 요구하는 IoT 데이터 문제와 핵심 특성을 탐구할 것이다. 

다음 항목을 다룹니다.

IoT의 E2E 수명 주기:
	IoT 애플리케이션 도메인:
		IoT에서 분석의 중요성
		IoT 데이터 분석에서 DL을 사용하려는 동기
IoT 데이터의 주요 특성 및 요구사항
=====
p35
IoT의 E2E 수명 주기
다른 조직과 산업은 IoT를 다르게 설명한다. 

그것을 간단하고 명확하게 정의하는 한 가지 방법은 물리적 세계와 디지털 세계를 연결하는 스마트 객체의 네트워크이다. 

IoT 솔루션의 E2E 라이프사이클 또는 더 일반적으로 IoT 생태계를 조사하는 것은 우리가 그것을 더 이해하고 머신러닝과 DL에 어떻게 적용되는지 보여주는 데 도움이 될 것이다. 

IoT의 정의와 유사하게, E2E 수명 주기 또는 보편적으로 합의된 IoT 아키텍처에 대한 단일 합의는 없다. 

서로 다른 아키텍처 또는 계층들이 다른 연구자들에 의해 제안되었다.

가장 일반적으로 제안된 옵션은 다음 다이어그램에 나와 있는 3계층 및 5계층 수명주기 또는 아키텍처입니다.

선행 다이어그램에서, (a)는 3계층 IoT 라이프 사이클 또는 아키텍처를 나타내고, (b)는 5계층 IoT 라이프 사이클 또는 아키텍처를 나타낸다.
===

p36

3층 E2E IoT 수명 주기

이것은 IoT 솔루션을 위한 가장 기본적이고 널리 사용되는 IoT 라이프 사이클이다. 
인식, 네트워크 및 애플리케이션 계층의 세 가지 계층으로 구성됩니다.
이것들은 다음과 같이 설명할 수 있다.

인식 계층: 
이것은 물리 계층 또는 감지 계층으로, 환경에 대한 정보를 수집하기 위해 센서가 있는 사물 또는 장치를 포함한다. 
다음 다이어그램에서 보는 바와 같이, 의료에서 IoT 솔루션의 E2E 라이프사이클의 지각 계층은 센서와 함께 배치된 환자, 병원 침대 및 휠체어로 구성된다.

네트워크 계층: 
네트워크는 다른 스마트 사물, 네트워크 장치 및 서버에 연결하는 역할을 한다. 
센서 데이터의 전송 및 처리도 담당합니다.

애플리케이션 계층: 
이 계층은 센서의 데이터를 기반으로 사용자에게 애플리케이션별 서비스를 제공합니다.
그것은 IoT가 배치될 수 있는 다양한 애플리케이션, 예를 들어 스마트 홈, 스마트 시티, 연결된 건강 등을 정의한다.
다음 다이어그램은 의료 분야의 3계층 E2E 라이프 IOT 사이클을 보여줍니다.

===============
p37

3계층 E2E IoT 라이프 사이클 또는 아키텍처는 IoT의 핵심 아이디어를 정의하지만, 종종 IoT의 더 미세한 측면을 다루기 때문에 연구 및 개발에 충분하지 않을 수 있다. 

이것이 5계층 수명주기와 같은 다른 수명주기 또는 구조들이 제안된 이유이다.

==============
p38

5층 IoT E2E 수명 주기

5계층 IoT 수명 주기는 인식, 전송, 처리, 애플리케이션, 비즈니스 계층으로 구성
인식, 애플리케이션 계층의 역할은 3계층 아키텍처에서와 동일
나머지 세 계층의 기능을 다음과 같이 개략적으로 설명

전송 계층:
3계층 수명 주기의 네트워크 계층과 유사
(인식 계층에 수집된 데이터를) (무선, 3G, LAN, 블루투스, RFID, NFC 등의 네트워크를 통해)
(처리 계층으로 전송)

처리 계층:
미들웨어 계층이라고도 합니다. 
전송 계층에서 나오는 엄청난 양의 데이터를 저장, 분석, 처리한다.
하위 계층들에게 다양한 서비스 세트를 관리하고 제공할 수 있다. 
데이터베이스, 클라우드 컴퓨팅, 빅데이터 처리 모듈과 같은 많은 기술을 사용한다.

비즈니스 계층: 
애플리케이션, 비즈니스 및 수익 모델, 사용자 개인 정보 보호를 포함한 전체 IoT 시스템을 관리합니다.
============
p39

IoT 시스템 아키텍처

IoT 시스템의 아키텍처를 이해하는 것은 애플리케이션을 개발하는 데 중요하다. 
안개 수준 및 클라우드 수준을 포함하여 다양한 컴퓨팅 플랫폼 수준에서 데이터 처리 요구 사항을 고려하는 것도 중요하다. 
많은 IoT 애플리케이션(이전 다이어그램에서 보듯이 의료 영역을 위한 IoT 솔루션과 같은)의 중요도와 지연 시간 민감성을 고려하면, 포그 컴퓨팅은 이러한 애플리케이션에 필수적이다.

다음 다이어그램은 포그 컴퓨팅의 작동 방식을 매우 간략하게 보여줍니다.

1. 차량/물건은 데이터 분석 지원을 위해 RSU와 통신합니다.
2. RSU는 클라우드에 접속하지 않고 로컬에서 데이터 분석을 수행하고 결과를 즉시(100ms 미만) 차로 전송합니다.

==================
p40

앞의 도표에서 볼 수 있듯이, 포그 컴퓨팅에서, 사물의 (자동차의) 데이터는 처리를 위해 클라우드로 이동하지 않는다. 
이러한 방식으로 포그 컴퓨팅은 IoT에서 클라우드가 직면한 많은 과제(예: 높은 대기 시간, 다운타임, 보안, 개인 정보 보호 및 신뢰)를 해결하고 위치 인식, 낮은 대기 시간, 이동성 지원, 실시간 상호 작용, 확장성 및 비즈니스 민첩성과 같은 많은 이점을 제공한다. 
다음 다이어그램은 포그 컴퓨팅의 프로토콜 계층별 아키텍처를 보여줍니다.

전송 계층: 
전처리되고 보안된 데이터를 클라우드에 업로드

보안 계층:
암호화/암호 해독, 개인 정보 보호 및 무결성 측정

임시 저장소 계층:
데이터 배포, 복제 및 중복제거

전처리층
데이터 분석, 데이터 필터링, 재구성 및 트리밍

모니터링 계층
모니터링, 전원 모니터링, 리소스 모니터링, 응답 모니터링 및 서비스 모니터링 활성화

물리적 및 가상화 계층
가상 센서 및 가상 센서 네트워크
사물 및 물리적 센서, 무선 센서 네트워크
==============================================
p41
앞의 도표에서 볼 수 있듯이, IoT를 사용한 포그 컴퓨팅 또는 포그 컴퓨팅의 아키텍처는 6개의 계층으로 구성됩니다.
물리적 및 가상화, 모니터링, 사전 처리, 임시 스토리지, 보안 및 전송을 포함합니다.
특히, 전처리 계층은 본질적으로 물리적 또는 가상 센서로부터 수집된 데이터를 분석, 필터링 및 트리밍함으로써 데이터 관리 작업을 수행한다.
===============================================
p42

IoT 애플리케이션 도메인 

IoT는 차량, 기계, 의료 센서 등과 같은 다양한 물리적 장치 또는 사물에 쉽게 액세스하고 상호 작용할 수 있게 함으로써 다양한 영역의 응용 프로그램 개발을 촉진한다. 
다음 다이어그램은 IoT의 주요 애플리케이션 도메인을 강조합니다.

여기에는 의료, 산업 자동화(즉, 산업 4.0), 에너지 관리 및 스마트 그리드, 교통, 스마트 인프라(스마트 홈 및 스마트 시티와 같은), 소매 및 우리의 삶과 사회를 더 나은 방향으로 변화시킬 많은 다른 영역이 포함된다. 
이러한 애플리케이션은 2025년까지 매년 4조 달러에서 11조 달러의 세계 경제적 영향을 미칠 것이다. 
이 금액의 주요 기여자(예상 기여도 순)는 다음과 같다.

p43

- 운영 관리 및 예측 유지보수를 포함한 공장 또는 산업
- 공공 안전, 보건, 교통 통제 및 자원 관리를 포함한 도시
- 질병의 모니터링 및 관리와 건강 개선을 포함한 의료 서비스
- 셀프 체크아웃 및 재고 관리를 포함한 소매업
- 스마트 그리드를 포함한 에너지

이러한 애플리케이션에 대한 엄청난 수요는 IoT 서비스와 그들이 생성하는 빅 데이터의 놀랍고도 가파른 성장을 의미한다.

================================================
p44

IoT에서 분석의 중요성

다양한 애플리케이션 도메인에서 IoT를 사용하는 것은 이러한 애플리케이션이 IoT 장치에 의해 생성되고 수집된 데이터에서 비즈니스 가치를 추출할 수 있는 경우에만 효과적일 것이다.

이런 맥락에서 IoT 솔루션에서는 IoT 데이터 분석이 필수적이다. 
Gartner는 IoT 분석을 IoT에 사용되는 두 가지 주요 기술 중 하나로 파악했습니다.

IoT 분석은 IoT 장치에 의해 생성된 방대한 양의 데이터에서 다양한 방식으로 통찰력을 잠금 해제하기 위한 데이터 분석 도구 및 절차의 적용이다. 
IoT 분석은 IoT 기기나 사물이 생성한 데이터에서 통찰력을 추출하는 데 필수적이다. 

보다 구체적으로 IoT 비즈니스 모델은 사물에 의해 생성되고 수집된 정보를 다양한 방식으로 분석합니다. 
예를 들어, 고객의 행동을 이해하고, 서비스를 제공하고, 제품과 서비스를 개선하고, 비즈니스 순간을 식별하고 가로채는 것입니다. 

이러한 IoT 비즈니스 모델 또는 애플리케이션의 대부분의 주요 요소는 예측, 데이터 마이닝 및 패턴 인식을 위한 지능형 학습 또는 기계 학습 메커니즘입니다.
전통적인 기계 학습 메커니즘이나 기술은 구조화된 데이터에서는 잘 작동하지만 구조화되지 않은 데이터에서는 어려움을 겪는다. 
구글의 네스트 러닝 서모스탯은 온도 데이터를 구조적으로 기록한 뒤 머신러닝 알고리즘을 적용해 사용자의 온도 선호도와 일정 패턴을 파악하는 것이 대표적이다. 

그러나 오디오 신호와 시각적 이미지인 멀티미디어 데이터와 같은 비정형 데이터는 이해하지 못한다. 
또한, 전통적인 기계 학습 알고리듬의 훈련은 이질성과 애플리케이션과 관련된 역학 때문에 많은 IoT 애플리케이션에서 쉽지 않을 수 있는 수작업 및 엔지니어링된 기능 세트에 의존한다. 

예를 들어 공장에서는 결함이 랜덤할 수 있으며 피쳐 세트를 사용하여 결함을 분류할 수 없습니다. 
이러한 이유로, IoT는 DL을 포함한 새로운 분석 접근법을 요구한다.
=================================================
p45

IoT 데이터 분석에서 DL을 사용하려는 동기

최근 몇 년 동안 많은 IoT 애플리케이션은 신경망을 사용하여 환경을 캡처하고 이해하는 정교한 DL 기술을 적극적으로 활용하고 있다. 
예를 들어 아마존 에코는 물리적 세계와 인간 세계를 디지털 세계와 연결하기 때문에 IoT 애플리케이션으로 간주된다. 
또한, 마이크로소프트의 윈도우 얼굴 인식 보안 시스템(IoT 애플리케이션)은 DL 기술을 사용하여 사용자의 얼굴을 인식할 때 도어를 잠금 해제하는 것과 같은 작업을 수행한다. 

DL과 IoT는 2017년 3대 전략 기술 동향 중 하나이며, Gartner Symposium ITxpo 2016에서 발표되었습니다. 
DL에 대한 집중적인 관심은 전통적인 기계 학습 알고리듬이 IoT 시스템의 새로운 분석 요구를 해결하지 못하기 때문이다.
반대로, 일반적으로 DL 알고리듬 또는 모델은 기존의 기계 학습 접근법에 비해 두 가지 중요한 개선을 가져온다. 

첫째, 모델 훈련에 사용할 수공예 및 엔지니어링된 피처 세트의 필요성을 줄인다. 
결과적으로, 사람에게는 분명하지 않을 수 있는 IoT 애플리케이션의 일부 기능은 DL 모델에 의해 쉽게 추출될 수 있다. 

또한 DL 모델은 예측 정확도를 향상시킨다. 
그러나 IoT 애플리케이션, 특히 에지 컴퓨팅 장치, 포그 컴퓨팅 장치 및 엔드 장치에서 DL을 활성화하는 것은 리소스 제한된 속성 때문에 어렵다. 
게다가 IoT 데이터는 일반 빅데이터와 다르다. 우리는 IoT 데이터 분석의 요구 사항을 더 잘 이해하기 위해 IoT 데이터의 특성과 일반 빅 데이터의 특성이 어떻게 다른지 탐구해야 한다.
=================================================
p46

IoT 데이터의 주요 특성 및 요구사항

IoT 애플리케이션의 데이터는 분석 접근 방식과 다른 처리를 필요로 하는 두 가지 특성을 나타낸다. 

원격 환자 모니터링 또는 자율 주행 차량과 같은 많은 IoT 애플리케이션은 지속적으로 데이터 스트림을 생성하며, 이는 엄청난 양의 지속적인 데이터로 이어진다. 

마케팅을 위한 소비자 제품 분석이나 숲이나 수중 거주자 모니터링과 같은 다른 많은 애플리케이션은 빅 데이터의 소스로 축적되는 데이터를 생성한다.

 스트리밍 데이터는 짧은 시간 내에 생성되거나 캡처되며 즉각적이고 유용한 통찰력을 추출하고 빠른 의사 결정을 내리기 위해 신속하게 분석되어야 한다. 

반대로 빅데이터라는 용어는 일반적으로 사용되는 하드웨어 및 소프트웨어 플랫폼이 저장, 관리, 처리 및 분석할 수 없는 거대한 데이터셋을 의미한다. 

이 두 가지 유형의 데이터는 분석 응답에 대한 요구 사항이 다르기 때문에 다르게 취급되어야 합니다.

비즈니스 인텔리전스 및 트랜잭션 분석과 같은 빅 데이터 분석 결과는 며칠 후에 제공될 수 있지만 스트리밍 데이터 분석 결과는 수백 밀리초에서 몇 초 이내에 준비됩니다. 

예를 들어, 운전자가 없는 자동차에서는 비상 브레이크의 경우 응답 시간이 약 100밀리초가 되어야 합니다. 다음 다이어그램은 IoT 데이터의 주요 특성과 분석 요구 사항을 강조합니다.


=====================================================

p47 48

실시간 평균 온도를 모니터링하는 애플리케이션과 같은 많은 IoT 애플리케이션은 여러 데이터 소스에 의존합니다. 

데이터 융합, 집계 및 공유는 이러한 애플리케이션에서 중요한 역할을 합니다. 

이는 원격 환자 모니터링 또는 무인 자동차와 같은 시간에 민감한 IoT 애플리케이션에서 분석을 위해 모든 데이터를 통합하고 이후 신뢰할 수 있고 정확한 실행 가능한 통찰력을 제공하기 위해 데이터를 적시에 수집해야 하는 경우 더욱 중요하다.

일반적으로 스트리밍 데이터의 분석은 고성능 컴퓨팅 시스템이나 클라우드 플랫폼에서도 어렵다. 

스트리밍 데이터 분석을 위한 잠재적인 솔루션은 데이터 병렬화 및 증분 처리를 기반으로 하는 프레임워크이다. 

이러한 기술은 시간 지연을 줄이고 스트리밍 데이터 분석 프레임워크의 응답을 반환할 수 있지만, 실시간 IoT 애플리케이션에 최적의 솔루션은 아니다. 

이런 맥락에서, 안개나 에지 컴퓨팅의 지원을 받아 IoT 장치나 에지 장치를 통해 스트리밍 데이터 분석을 데이터 소스에 더 가까이 가져오는 것이 더 낫다.

그러나 IoT 장치나 사물에 데이터 분석을 추가하면 데이터 소스에서 컴퓨팅, 스토리지 및 전력 리소스의 제한과 같은 새로운 과제가 발생합니다.

IoT는 수십억 개의 스마트 기기를 연결하고 기기 상태와 환경에 대한 데이터를 수시로 수집해 빅데이터를 생성하는 역할을 한다. 

원시 센서에서 나오는 방대한 양의 데이터에서 의미 있는 패턴을 식별하고 마이닝하는 것은 의사 결정 및 추세 예측을 위한 추가 통찰력을 얻기 때문에 IoT 애플리케이션에서 빅 데이터 분석의 핵심 유용성이다. 

이러한 통찰력을 추출함으로써 IoT 빅 데이터는 경쟁사보다 우위를 점할 수 있기 때문에 많은 기업에 매우 중요하다. 

다음 다이어그램은 6V(6V)를 사용하는 IoT 빅데이터의 특성을 보여줍니다.

volume, velocity, variety, veracity, variabilty, value

=================================================
p49

빠르고 스트리밍하는 IoT 데이터의 실제 사례

원격 환자 모니터링은 의료 분야에서 IoT의 가장 명확하고 인기 있는 응용 프로그램 중 하나이다. 
원격 건강이라고도 하는 이 애플리케이션을 통해 환자는 자신의 의료 제공자와 연결되어 필요한 경우 실시간 피드백을 받을 수 있다. 
심박수나 혈압의 변동성과 같은 이 애플리케이션에 의해 생성되는 데이터는 스트리밍 데이터이며, 의료 제공자가 환자의 상황에 신속하게 대응할 수 있도록 신속하게 처리되어야 한다.
다음 다이어그램은 시판되는 원격 환자 모니터링 시스템의 스냅샷을 보여줍니다.

=================================================
p51 52
IoT 빅 데이터의 실제 사례

스마트 그리드는 IoT 빅 데이터의 중요한 원천이다. 

스마트 미터는 사용자의 에너지 소비에 대한 정확한 측정을 생성하고 수집함으로써 스마트 그리드 시스템에서 중요한 역할을 한다. 

현재 많은 국가의 에너지 공급자는 현지 에너지 소비 패턴을 학습하고 고객의 요구를 예측하며 실시간 분석을 기반으로 적절한 의사 결정을 내리는 데 관심이 있다.

IoT 빅 데이터의 또 다른 예는 스마트 기기에서 생성된 데이터이다. 

다음 다이어그램은 IoT 데이터를 활용한 마케팅을 위한 소비자 제품 분석 과정을 보여줍니다.

앞의 다이어그램에서 보는 바와 같이, IoT가 가능한 원격 환자 모니터링 시스템은 처리, 저장 및 분석할 수 있는 방대한 양의 데이터를 생성할 수 있다. 

그럼에도 불구하고, 스마트 커피 머신, 스마트 냉장고, 스마트 자판기와 같은 스마트 기기는 또한 빅 데이터를 생성할 수 있으며, 이는 소비자 제품 분석에 사용될 수 있다.
=================================================
p53


요약

이 장에서는 IoT의 E2E 수명 주기에 대한 두 가지 다른 계층적 관점을 제시했다. 
우리는 또한 IoT의 IoT 시스템 아키텍처와 주요 애플리케이션 도메인에 대해 살펴보았다.

이어서, 우리는 특히 DL에 중점을 두고 IoT 분석이 무엇을 의미하는지와 IoT 애플리케이션에서 그것의 중요성을 정의했다. 
우리는 분석에서 IoT의 주요 특성과 그에 상응하는 요구 사항에 대해 논의했다. 
마지막으로, 우리는 빅 데이터뿐만 아니라 빠른 스트리밍 데이터를 생성하는 몇 가지 실제 IoT 사례를 제시했다. 

다음 장에서는 최근 몇 년 동안 소개된 몇 가지 일반적인 DL 모델과 가장 최신의 아키텍처를 소개하고, IoT 스트리밍 및 빅 데이터 분석에 어떻게 유용할 수 있는지 알아봅니다.  
다양한 사물인터넷 애플리케이션에서 사용하기 위해서는 다양한 DL 모델의 기본과 다양한 구현 프레임워크를 아는 것이 필수적이다. 
다음 장에서는 컨볼루션 신경망, 장기 단기 메모리 및 자동 인코더를 포함하여 인기 있는 DL 모델의 목록을 제시할 것이다. 
이 외에도, 우리는 텐서플로우와 케라스를 포함하여 인기 있는 DL 개발 프레임워크 목록에 대해 논의한다.
==================================================
p55

IoT를 위한 딥러닝 아키텍처

사물인터넷(IoT) 시대에 다양한 분야와 응용 분야에 대한 엄청난 양의 감각 데이터가 생성되고 수많은 감지 장치에서 수집되고 있다. 
이러한 데이터 스트림에 분석을 적용하여 새로운 정보를 발견하고, 미래의 통찰력을 예측하고, 제어된 의사 결정을 내리는 것은 어려운 작업이며, 이는 IoT를 비즈니스 인텔리전스와 삶의 질 향상 기술을 위한 가치 있는 패러다임으로 만든다. 

그러나 IoT 지원 장치에 대한 분석에는 머신러닝(ML) 및 딥러닝(DL) 프레임워크, 소프트웨어 스택 및 하드웨어(예: GPU 및 텐서 프로세싱 유닛)로 구성된 플랫폼이 필요하다.
이 장에서는 이후의 모든 장에서 사용될 DL 아키텍처와 플랫폼의 몇 가지 기본 개념에 대해 논의할 것이다. 

ML에 대한 간단한 소개로 시작할 것이다. 
그런 다음 데이터에서 높은 수준의 추상화를 모델링하려는 알고리듬 세트를 기반으로 하는 ML의 한 분야인 DL로 넘어갈 것이다.
우리는 가장 잘 알려져 있고 널리 사용되는 신경망 아키텍처 중 일부에 대해 간략하게 논의할 것이다. 
그런 다음 IoT 지원 장치에서 DL 애플리케이션을 개발하는 데 사용할 수 있는 DL 프레임워크와 라이브러리의 다양한 기능을 살펴볼 것이다. 간략하게는 다음 항목을 다룹니다.

ML에 대한 부드러운 소개
인공신경망
심층 신경망 아키텍처
DL 프레임워크
==================================================
p56
ML에 대한 부드러운 소개

ML 접근법은 분류, 회귀 분석, 개념 학습, 예측 모델링, 클러스터링 및 유용한 패턴의 마이닝과 같은 작업을 수행하는 일련의 통계 및 수학 알고리듬을 기반으로 한다. 
ML을 사용하여 전체 학습 과정을 자동으로 개선하여 완전한 인간 상호 작용이 필요하지 않거나 최소한 그러한 상호 작용의 수준을 최대한 줄일 수 있도록 하는 것을 목표로 한다.


==================================================
p57
학습 알고리즘의 작동 원리

Tom M. Mitchell은 컴퓨터 과학의 관점에서 학습이 진정으로 무엇을 의미하는지 설명했습니다.
"컴퓨터 프로그램은 어떤 종류의 작업 T와 성능 측정 P와 관련하여 경험 E에서 학습한다고 하며, 만약 P에 의해 측정된 T의 작업에서 성능이 경험 E와 함께 향상된다면.“

이 정의에 기초하여, 우리는 컴퓨터 프로그램이나 기계가 다음을 할 수 있다고 결론을 내릴 수 있다. 
- 데이터 및 기록을 통해 학습
- 경험을 바탕으로 개선
- 질문의 결과를 예측하는 데 사용할 수 있는 모델을 반복적으로 개선합니다.

앞의 지점들이 예측 분석의 핵심이기 때문에, 우리가 사용하는 거의 모든 ML 알고리듬은 최적화 문제로 취급될 수 있다. 

이것은 목적 함수를 최소화하는 매개변수를 찾는 것에 관한 것이다. 
예를 들어, 비용 함수 및 정규화와 같은 두 항의 가중 합입니다.

일반적으로 목적함수는 두 가지 요소로 구성된다.
- 모형의 복잡성을 제어하는 정규화 도구 
- train 데이터에 대한 모델의 오류를 측정하는 손실 

반면, 정규화 매개 변수는 과적합 문제를 피하기 위해 훈련 오류를 최소화하는 것과 모델의 복잡성 사이의 균형을 정의한다. 
자, 만약 이 두 성분이 모두 볼록하다면, 그들의 합 또한 볼록한 것입니다. 
따라서 ML 알고리즘을 사용할 때 목표는 예측할 때 최소 오차를 반환하는 함수의 최상의 하이퍼 파라미터를 얻는 것이다. 
따라서 볼록 최적화 기법을 사용하여 최소 오차로 수렴할 때까지 함수를 최소화할 수 있다.

====================================================
p58

문제가 볼록하다는 것을 고려하면, 일반적으로 점근법을 분석하는 것이 더 쉽다.
모델이 점점 더 많은 훈련 데이터를 관찰함에 따라 수렴하는 속도를 보여주는 알고리즘의 동작. 

ML의 작업은 주어진 입력 데이터에서 복잡한 패턴을 인식하고 자동화된 방식으로 의사 결정을 내릴 수 있도록 모델을 훈련시키는 것이다.
따라서 예측을 하는 것은 새로운(즉, 관찰되지 않은) 데이터에 대해 모형을 테스트하고 모형 자체의 성능을 평가하는 것입니다. 

그러나 전체적으로, 그리고 예측 모델을 성공적으로 만들기 위한 과정에서 데이터는 모든 ML 작업에서 일등 시민 역할을 한다. 
실제로 우리가 ML 시스템에 공급하는 데이터는 벡터와 같은 수학적 객체로 구성되어야 이러한 데이터를 소비할 수 있다.

사용 가능한 데이터 및 피쳐 유형에 따라 예측 모델의 성능이 크게 달라질 수 있습니다. 
따라서 모형 평가를 수행하기 전에 올바른 형상을 선택하는 것이 가장 중요한 단계 중 하나입니다.
이를 피처 엔지니어링이라고 하는데, 여기서 데이터와 관련된 도메인 지식은 ML 알고리즘이 작동하도록 사용될 피처 벡터를 준비하는 데 도움이 되는 선택적이거나 유용한 피처만 생성하는데 사용된다.

예를 들어, 우리가 이미 여러 호텔에 머무르는 개인적인 경험을 하지 않는 한 호텔을 비교하는 것은 꽤 어렵다. 
그러나 이미 수천 개의 리뷰와 기능(예: 호텔에 별이 몇 개 있는지, 방의 크기, 위치 및 룸 서비스 등) 중에서 양질의 기능으로 훈련된 ML 모델의 도움으로 이제 꽤 실현 가능하다.
이 장에서는 몇 가지 예를 살펴보겠습니다. 

그러나 이러한 ML 모델을 개발하기 전에 여러 ML 개념을 아는 것도 중요하다.
=====================================================
p59 
일반 ML 경험칙

일반적인 ML 경험칙은 데이터가 많을수록 예측 모델이 더 낫다는 것입니다. 
그러나 특히 데이터 세트가 다차원인 경우 성능이 크게 저하될 정도로 기능이 더 많으면 혼란이 발생하는 경우가 많다. 전체 학습 프로세스에는 세 가지 유형으로 분할될 수 있는 입력 데이터 세트가 필요하다(또는 이미 제공됨).

- 교육 세트는 ML 알고리즘의 매개 변수를 맞추는 데 사용되는 기록 또는 실시간 데이터에서 제공되는 지식 기반입니다. 훈련 단계에서 ML 모델은 훈련 세트를 활용하여 네트워크의 최적 가중치를 찾고 훈련 오류를 최소화하여 목적 기능에 도달한다. 
여기서, 역전파 규칙 또는 최적화 알고리듬이 모델을 훈련하는 데 사용되지만, 모든 초 매개 변수는 학습 프로세스가 시작되기 전에 설정되어야 한다.

- 검증 세트는 ML 모델의 매개 변수를 조정하는 데 사용되는 예제 세트입니다. 모델이 잘 훈련되고 과적합을 방지하기 위해 일반화됩니다. 
일부 ML 실무자들은 이를 개발 세트 또는 개발 세트라고도 한다. 

- 테스트 세트는 보이지 않는 데이터에 대한 훈련된 모델의 성능을 평가하는 데 사용된다. 
이 단계를 모델 추론이라고도 합니다. 
테스트 세트에서 최종 모델을 평가한 후(즉, 모델의 성능에 완전히 만족하는 경우) 모델을 더 이상 조정할 필요는 없지만, 교육을 받은 모델을 프로덕션 환경에서 배포할 수 있습니다.

일반적인 관행은 입력 데이터(필요한 전처리 및 기능 엔지니어링 후)를 교육용 60%, 검증용 10%, 테스트용 20%로 나누는 것이지만 실제로는 사용 사례에 따라 다르다. 

데이터 세트의 가용성과 품질을 기반으로 데이터에 대한 업샘플링 또는 다운샘플링을 수행해야 하는 경우도 있습니다. 다양한 유형의 훈련 세트에 대한 이 경험칙은 ML 작업에 따라 달라질 수 있으며, 다음 섹션에서 다룰 것이다. 
그러나, 그 전에, ML의 몇 가지 일반적인 현상을 간단히 살펴보자.

=====================================================
p60 

ML 모델의 일반적인 문제

이 입력 데이터를 훈련, 검증 및 테스트에 사용할 때 일반적으로 학습 알고리듬은 100% 정확하게 학습할 수 없으며,
이는 훈련, 검증 및 테스트 오류(또는 손실)를 포함한다. 
ML 모델에서 발생할 수 있는 두 가지 유형의 오류가 있습니다.

- 환원 불가 error
- 감소 가능 error # bias/variance

가장 강력하고 정교한 모델로도 환원 불가능한 오류를 줄일 수 없다. 
그러나 bias과 분산이라는 두 가지 성분이 있는 축소 가능한 오차는 줄일 수 있습니다.

따라서 모형(즉, 예측 오차)을 이해하려면 bias과 분산에만 초점을 맞춰야 합니다. 
bias은 예측 값이 실제 값에서 얼마나 떨어져 있는지를 의미합니다.
일반적으로 평균 예측값이 실제값(라벨)과 매우 다르면 bias가 더 높습니다. 

ML 모델은 입력 변수와 출력 변수 사이의 관계를 모델링할 수 없고(데이터의 복잡성을 잘 포착할 수 없음) 매우 간단해지기 때문에 높은 편향을 가집니다. 
따라서 분산이 높은 지나치게 단순한 모형은 데이터의 적합성을 저하시킵니다. 
다음 다이어그램은 몇 가지 높은 수준의 통찰력을 제공하며 딱 맞는 모델의 모습을 보여줍니다.

[그림]
1. 과적합 low bias + high variance
2. 과소적합 high bias + low variance
3. 적합 low bias + low variance

bias^2 = (실제값-예측값)^2
variance = (예측값 - 평균예측값)의 평균제곱

high variance는 train error 낮, test error 높
high bias는 train error 높, val/test error 비슷

=====================================================
p61 

분산은 예측값과 실제값 사이의 변동성(얼마나 분산되어 있는지)을 의미합니다.
모델의 훈련 오류가 높고 검증 오류 또는 테스트 오류가 훈련 오류와 동일하면 모델의 편향이 높습니다.
반면에 모델의 학습 오류는 낮지만 유효성 검사 또는 테스트 오류가 높으면 모델의 분산이 높습니다.

ML 모델은 일반적으로 교육 세트에서 매우 잘 수행되지만 테스트 세트에서는 제대로 작동하지 않습니다(높은 오류율 때문에). 궁극적으로 과소적합 모델이 됩니다. 과적합과 과소적합을 다시 한 번 요약할 수 있습니다.

과소적합: 훈련 및 검증 오류가 모두 상대적으로 동일하고 매우 높으면 모델이 훈련 데이터에 과소적합할 가능성이 높습니다.
과적합: 훈련 오류가 낮고 검증 오류가 높다면 모델이 훈련 데이터에 과적합되었을 가능성이 높습니다. 딱 맞는 모델은 매우 잘 학습하고 보이지 않는 데이터에서도 더 나은 성능을 발휘합니다.
편향-분산 tradeoff : 높은 편향과 높은 분산 문제는 모델이 동시에 너무 복잡하거나 너무 단순할 수 없기 때문에 종종 편향-분산 거래라고 합니다. 
이상적으로, 우리는 편향과 분산이 모두 낮은 존재를 위해 노력합니다.

이제 우리는 ML 알고리즘의 기본 작동 원리를 알고 있습니다.
그러나 문제 유형과 문제 해결에 사용되는 방법에 따라 ML 작업이 다를 수 있습니다. 
예를 들어 지도 학습, 비지도 학습 및 강화 학습이 있습니다.
다음 섹션에서 이러한 학습 작업에 대해 자세히 설명합니다.

=====================================================
p62

ML 작업

모든 ML 문제는 다소 최적화 문제이지만 해결 방법은 다를 수 있습니다. 
실제로 학습 작업은 지도 학습, 비지도 학습 및 강화 학습의 세 가지 유형으로 분류할 수 있습니다.
=====================================================
p63
지도학습

지도 학습은 가장 간단하고 가장 잘 알려진 자동 학습 작업입니다. 
다음 다이어그램과 같이 각 입력이 속해야 하는 범주가 이미 알려진 사전 정의된 여러 예를 기반으로 합니다.

[그림]

앞의 다이어그램은 지도 학습의 일반적인 워크플로우를 보여줍니다.

행위자(예: 데이터 과학자 또는 데이터 엔지니어)는 추출, 변환 및 로드(ETL) 및 
필요한 변수 엔지니어링(변수 추출, 선택 등)을 수행하여 모델에 공급할 수 있도록 
변수 및 레이블이 있는 적절한 데이터를 가져옵니다.

그런 다음 데이터를 train, 개발 및 테스트 세트로 분할합니다.
train 세트는 ML 모델을 교육하는 데 사용되고 
유효성 검사 세트는 과적합 문제 및 정규화에 대해 교육을 검증하는 데 사용되며 
행위자는 테스트 세트(즉, 보이지 않는 데이터)에서 모델의 성능을 평가합니다.
=====================================================
p64

그러나 성능이 만족스럽지 않은 경우 행위자는 추가 튜닝을 수행하여 하이퍼 매개 변수 최적화를 기반으로 최상의 모델을 얻을 수 있습니다.
마지막으로 프로덕션 준비 환경에서 최상의 모델을 배포합니다.
전체 수명 주기에는 각 단계를 독립적으로 또는 공동으로 수행하는 많은 행위자(예: 데이터 엔지니어, 데이터 과학자 또는 ML 엔지니어)가 포함될 수 있습니다.
지도 학습 컨텍스트에는 분류 및 회귀 작업이 포함됩니다. 분류는 데이터 포인트가 (이산 값)의 일부인 클래스를 예측하는 데 사용됩니다.
또한 클래스 속성의 레이블을 예측하는 데 사용됩니다.
다음 다이어그램은 이러한 단계를 간단히 요약한 것입니다.

[그림] Data Ingestion(데이터 수집)

반면 회귀는 연속 값을 예측하고 클래스 속성의 수치적 예측을 만드는 데 사용됩니다.
감독 학습의 맥락에서 입력 데이터 세트에 필요한 학습 프로세스는 무작위로 세 세트로 나뉩니다.
예를 들어 훈련 세트의 경우 60%, 검증 세트의 경우 10%, 테스트 세트의 경우 나머지 30%입니다.

=====================================================
p65

비지도 학습

레이블이 지정되지 않은 경우(정답데이터가 없음) 데이터 세트를 어떻게 요약하고 그룹화합니까?
데이터 세트의 기본 구조를 찾고 빈도 분포, 평균 및 표준 편차와 같은 통계적 속성을 측정하여 이 질문에 답하려고 할 것입니다.

압축된 형식으로 데이터를 효과적으로 표현하는 방법이 질문인 경우 
압축을 수행하는데 일부 소프트웨어를 사용할 것이라고 대답할 것입니다.
하지만 해당 소프트웨어가 어떻게 수행할지 모를 수도 있습니다.
다음 다이어그램은 비지도 학습 작업의 일반적인 워크플로우를 보여줍니다.

[그림]

이것은 주로 데이터 기반 프로세스인 비지도 학습의 주요 목표 중 정확히 두 가지입니다.
레이블이 지정되지 않은 데이터를 처리해야 하므로 이러한 유형의 학습을 비지도 학습이라고 합니다.
다음은 AI 연구 책임자인 Yann LeCun의 인용문입니다(출처: Predictive Learning, NIPS 2016, Yann LeCun, Facebook Research).


=====================================================
p66

"대부분의 인간 및 동물 학습은 비지도 학습입니다. 
지능이 케이크라면 비지도 학습은 케이크가 될 것이고, 
지도 학습은 케이크의 장식이 될 것이며, 강화 학습은 케이크의 체리가 될 것입니다. 
우리는 착빙과 체리, 하지만 우리는 케이크를 만드는 방법을 모릅니다. 
진정한 AI에 도달하는 것을 생각하기 전에 비지도 학습 문제를 해결해야 합니다."

가장 널리 사용되는 몇 가지 비지도 학습 작업은 다음과 같습니다.

클러스터링:
예를 들어 Airbnb와 같은 회사는 유사성(또는 통계적 특성)을 기반으로 데이터 포인트를 그룹화하여 
고객이 목록에 있는 항목을 더 쉽게 탐색할 수 있도록 아파트와 주택을 이웃으로 그룹화하는 경우가 많습니다.

차원 감소:
구조 및 통계적 특성이 최대한 보존된 데이터 압축, 예를 들어 종종 모델링 및 
시각화를 위해 데이터 세트의 차원 수를 줄여야 합니다.

이상 감지:
신용 카드 사기 탐지 식별, 산업 엔지니어링 프로세스에서 결함이 있는 하드웨어 조각 식별, 
대규모 데이터 세트에서 이상값 식별과 같은 여러 응용 프로그램에 유용합니다.

연관 규칙 마이닝:
예를 들어 어떤 항목을 자주 함께 구매하는지 묻는 장바구니 분석에 자주 사용됩니다.

=====================================================
p67
강화 학습

강화 학습은 환경과의 상호 작용을 통해 시스템 학습에 중점을 둔 인공 지능 접근 방식입니다.
강화 학습에서 시스템의 매개변수는 환경에서 얻은 피드백을 기반으로 조정되며, 
이는 다시 시스템이 내린 결정에 대한 피드백을 제공합니다.
다음 다이어그램은 목적지에 도착하기 위해 결정을 내리는 사람을 보여줍니다.
집에서 직장까지 이동하는 경로의 예를 들어 보겠습니다.

[그림]

체스 플레이어를 모델링하는 시스템 측면에서 한 가지 예를 더 살펴볼 수 있습니다.
성능을 향상시키기 위해 시스템은 이전 동작의 결과를 활용합니다. 

이 경우 매일 같은 경로로 출근합니다.
그러나 어느 날 갑자기 호기심이 생겨 최단 경로를 찾기 위해 다른 경로를 시도하기로 결정합니다.

마찬가지로, 경험과 다른 경로에서 소요된 시간에 따라 특정 경로를 더 자주 이용해야 하는지 여부를 결정할 수 있습니다.
체스 플레이어를 모델링하는 시스템 측면에서 한 가지 예를 더 살펴볼 수 있습니다.
지금까지 ML의 기본 작동 원리와 다양한 학습 작업을 배웠습니다.
다음 섹션에서 몇 가지 사용 사례와 함께 각 학습 작업을 살펴보겠습니다.

=====================================================
p69

애플리케이션이 있는 학습 유형

우리는 ML 알고리즘의 기본 작동 원리를 보았고 기본 ML 작업이 무엇인지, 
그리고 도메인별 문제를 공식화하는 방법을 보았습니다.

그러나 이러한 각 학습 작업은 서로 다른 알고리즘을 사용하여 해결할 수 있습니다.
다음 다이어그램은 이에 대한 간략한 정보를 제공합니다.

[그림]
지도학습
- 회귀
	Linear Regression
	Generalized linear Regression
	Isotonic Regression
	Survival Regression
- 분류
	Support Vector Machine
	Naive Bayes
	Logistic Regression
	Decision Trees
	Gradient Boosted Trees
	Random Forest

비지도학습
- 클러스터링
	K-means
	Bisecting K-means
	Streaming 
	Gaussian mixture model

- 차원 축소
	Principal component analysis
	Singular value decomposition

강화학습
Markov decision process
Q-learning
Multi-armed bandit

그러나 앞의 다이어그램에는 다양한 ML 작업을 사용하는 몇 가지 사용 사례와 애플리케이션만 나열되어 있습니다.
실제로 ML은 수많은 사용 사례와 애플리케이션에서 사용됩니다.
우리는 이 책 전체에서 그 중 몇 가지를 다루려고 노력할 것입니다.

=====================================================
p70

DL 탐구
일반 크기의 데이터 분석에 사용된 단순 ML 방법은 더 이상 효과적이지 않으며 보다 강력한 ML 방법으로 대체되어야 합니다.

전통적인 ML 기술을 통해 연구원은 관련 변수의 그룹 또는 클러스터를 식별할 수 있지만
이러한 방법의 정확성과 효율성은 대규모 다차원 데이터로 인해 감소합니다.
=====================================================
p71

DL은 어떻게 ML을 다음 단계로 끌어 올렸습니까?

소규모 데이터 분석에 사용되는 단순 ML 방법은 대규모 및 고차원 데이터 세트를 처리할 때 효과적이지 않습니다.
그러나 데이터에서 높은 수준의 추상화를 모델링하려고 시도하는 일련의 알고리즘을 기반으로 하는 ML의 한 가지인 딥 러닝(DL)은 이 문제를 처리할 수 있습니다.
Ian Goodfellow는 그의 저서 "Deep Learning, MIT Press, 2016"에서 DL을 다음과 같이 정의했습니다.

"딥 러닝은 더 간단한 개념과 관련하여 정의된 각 개념과 덜 추상적인 개념으로 계산된 더 추상적인 표현으로 세계를 개념의 중첩된 계층으로 표현하는 방법을 학습함으로써 큰 힘과 유연성을 달성하는 특별한 종류의 기계 학습입니다. .“

ML 모델과 유사하게 DL 모델도 입력 X를 취하고 여기에서 높은 수준의 추상화 또는 패턴을 학습하여 Y의 출력을 예측합니다.

예를 들어 지난주 주가를 기반으로 DL 모델은 다음 날 주가를 예측할 수 있습니다.
이러한 과거 주식 데이터에 대한 교육을 수행할 때 DL 모델은 예측 값과 실제 값 간의 차이를 최소화하려고 합니다.
이러한 방식으로 DL 모델은 이전에 본 적이 없는 입력으로 일반화를 시도하고 테스트 데이터에 대한 예측을 수행합니다.

이제 ML 모델이 동일한 작업을 수행할 수 있다면 이를 위해 DL이 필요한 이유가 궁금할 것입니다.
음, DL 모델은 많은 양의 데이터에서 잘 수행되는 경향이 있는 반면, 이전 ML 모델은 특정 지점 이후 개선을 멈춥니다.
뇌의 구조와 기능에서 영감을 얻은 DL의 핵심 개념을 인공 신경망(ANN)이라고 합니다.

DL의 핵심인 ANN은 보다 강력하고 정확한 예측을 위해 입력 세트와 출력 세트 간의 연관성을 학습하는 데 도움이 됩니다.
그러나 DL은 ANN에만 국한되지 않습니다.

DL을 대중에게 제공하는 많은 이론적 발전, 소프트웨어 스택 및 하드웨어 개선이 있었습니다.
시스템이 두 가지 문제를 해결해야 하는 동물 인식기와 같은 예측 분석 모델을 개발하려는 예를 살펴보겠습니다.
=====================================================
p72

- 이미지가 고양이인지 개인지 분류
- 개와 고양이의 이미지를 클러스터링합니다.

일반적인 ML 방법을 사용하여 첫번째 문제를 해결하려면 얼굴특징(귀, 눈, 수염 등)을 정의하고 
특정동물을 분류할 때 어떤특징(일반적으로 비선형)이 더 중요한지 식별하는 방법을 작성해야 합니다.

그러나 동시에 이미지 클러스터링을 위한 기존 ML 알고리즘(예: k-means)이 
비선형 기능을 처리할 수 없기 때문에 두 번째 문제를 해결할 수 없습니다.

주어진 이미지가 고양이인지 분류하기 위해 따라야 할 워크플로를 보여주는 다음 다이어그램을 살펴보세요.


[그림] manual feature extraction(수동 변수추출)

DL 알고리즘은 이 두 가지 문제를 한 단계 더 나아가 분류 또는 클러스터링에 
가장 중요한 변수를 결정한 후 자동으로 추출합니다.
반대로 기존 ML 알고리즘을 사용하는 경우 기능을 수동으로 제공해야 합니다.

DL 알고리즘은 대신 더 정교한 단계를 거칩니다.
예를 들어, 먼저 고양이나 개를 클러스터링할 때 가장 관련성이 높은 경계(edge)를 식별합니다.
그런 다음 모양과 가장자리의 다양한 조합을 계층적으로 찾으려고 시도하는데 이를 ETL이라고 합니다.
=====================================================
p73

그런 다음 몇 번의 반복 후에 복잡한 개념과 변수의 계층적 식별을 수행합니다.
그런 다음 식별된 변수를 기반으로 DL 알고리즘은 동물을 분류하는 데 가장 중요한 변수를 결정합니다.
이 단계를 변수추출이라고 합니다.

마지막으로 레이블 열을 제거하고 자동 인코더(AE)를 사용하여 
비지도 학습을 수행하여 클러스터링을 위해 kmeans에 재배포할 잠재 기능을 추출합니다.
그런 다음 클러스터링 할당 강화 손실(CAH 손실) 및 재구성 손실이 
최적의 클러스터링 할당을 향해 공동으로 최적화됩니다.

그러나 실제로 DL 알고리즘은 각 픽셀의 위치와 색상만 알고 있기 때문에 
우리가 보는 것처럼 이미지를 보지 않는 원시 이미지 표현으로 제공됩니다.
이미지는 다양한 분석 계층으로 나뉩니다.

예를 들어, 하위 수준에는 색상 유형이나 다양한 뉘앙스를 감지하는 작업이 있는 
몇 개의 픽셀 그리드인 소프트웨어 분석이 있습니다.
무언가를 찾으면 다음 단계에 알리고 이 단계에서 주어진 색상이 선과 같은 더 큰 형태에 속하는지 여부를 확인합니다.
알고리즘이 다음 다이어그램에 표시된 내용을 이해할 때까지 프로세스는 상위 수준으로 계속됩니다.

[그림]
=====================================================
p74
개 대 고양이는 매우 간단한 분류기의 예이지만 이러한 유형의 작업을 수행할 수 있는 소프트웨어는 이제 널리 퍼져 있으며 
예를 들어 얼굴 인식 시스템이나 Google에서 이미지를 검색하는 시스템에서 찾을 수 있습니다.

이러한 종류의 소프트웨어는 DL 알고리즘을 기반으로 합니다.
대조적으로 선형 ML 알고리즘을 사용하는 경우 이러한 알고리즘은 비선형 이미지 기능을 처리할 수 없기 때문에 이러한 애플리케이션을 구축할 수 없습니다.
또한 ML 접근 방식을 사용하면 일반적으로 몇 가지 하이퍼파라미터만 처리합니다.
그러나 신경망을 혼합하면 상황이 너무 복잡해집니다.
각 레이어에는 튜닝해야 할 수백만 또는 수십억 개의 하이퍼파라미터가 있습니다. 
너무 많아서 비용 함수가 볼록하지 않게 됩니다.

또 다른 이유는 은닉층에서 사용되는 활성화 함수가 비선형이어서 비용이 볼록하지 않기 때문입니다.
이 현상에 대해서는 이후 장에서 자세히 논의하겠지만 ANN에 대해 간단히 살펴보겠습니다.

=====================================================
p75
인공 신경망

인간의 두뇌가 작동하는 방식에서 영감을 얻은 ANN은 DL의 핵심과 진정한 실현을 형성합니다. 
DL을 둘러싼 오늘날의 혁명은 ANN 없이는 불가능했을 것입니다. 
따라서 DL을 이해하려면 신경망이 어떻게 작동하는지 이해해야 합니다.
=====================================================
p76

ANN과 인간의 뇌

ANN은 인간 신경계의 한 측면을 나타내며 신경계가 축삭을 사용하여 서로 통신하는 여러 뉴런으로 구성되는 방식을 나타냅니다.
수용체는 내부 또는 외부 세계로부터 자극을 받습니다.
그런 다음 이 정보를 추가 처리를 위해 생물학적 뉴런에 전달합니다.
축색돌기라고 하는 또 다른 긴 확장 외에도 많은 수상돌기가 있습니다.
축색 돌기의 끝 부분에는 시냅스 말단이라는 작은 구조가 있는데, 이는 하나의 뉴런을 다른 뉴런의 수상돌기에 연결하는 데 사용됩니다.
생물학적 뉴런은 다른 뉴런으로부터 신호라고 하는 짧은 전기 자극을 받고 이에 대한 응답으로 자체 신호를 트리거합니다.

따라서 우리는 뉴런이 세포체(소마라고도 함), 다른 뉴런으로부터 신호를 수신하는 하나 이상의 수상돌기 및 뉴런에 의해 생성된 신호를 수행하는 축삭으로 구성되어 있다고 요약할 수 있습니다.

뉴런은 다른 뉴런에 신호를 보낼 때 활성 상태에 있습니다.
그러나 다른 뉴런으로부터 신호를 받을 때는 비활성 상태입니다.
유휴 상태에서 뉴런은 특정 활성화 임계값에 도달하기 전에 수신된 모든 신호를 축적합니다.
이 전체 프로세스는 연구자들이 ANN을 테스트하도록 동기를 부여했습니다.
=====================================================
p77

ANN의 간략한 역사

생물학적 뉴런의 작동 원리에 영감을 받은 Warren McCulloch와 Walter Pitts는 1943년에 신경 활동의 계산 모델 측면에서 최초의 인공 뉴런 모델을 제안했습니다.
인공 뉴런(AN)이라고도 하는 생물학적 뉴런의 이 간단한 모델에는 하나 이상의 이진(켜짐/꺼짐) 입력과 하나의 출력만 있습니다.
AN은 특정 수 이상의 입력이 활성화되면 단순히 출력을 활성화합니다.

예제가 너무 사소하게 들리지만 이렇게 단순화된 모델로도 AN의 네트워크를 구축할 수 있습니다.
그럼에도 불구하고 이러한 네트워크를 결합하여 복잡한 논리식도 계산할 수 있습니다.

이 단순화된 모델은 John von Neumann, Marvin Minsky, Frank Rosenblatt 및 기타 많은 사람들이 1957년에 퍼셉트론이라는 또 다른 모델을 고안하도록 영감을 주었습니다.

퍼셉트론은 지난 60년 동안 우리가 본 가장 단순한 ANN 아키텍처 중 하나입니다.
LTU(Linear Threshold Unit)라고 하는 약간 다른 AN을 기반으로 합니다. 유일한 차이점은 입력과 출력이 이제 이진 켜기/끄기 값 대신 숫자라는 것입니다.
각 입력 연결은 가중치와 연결됩니다.
LTU는 입력의 가중 합계를 계산한 다음 해당 합계에 단계 함수(활성화 함수의 작업과 유사)를 적용하고 결과를 출력합니다.

퍼셉트론의 단점 중 하나는 결정 경계가 선형이라는 것입니다.
따라서 복잡한 패턴을 학습할 수 없습니다.
또한 배타적 논리합(XOR)과 같은 일부 간단한 문제를 해결할 수 없습니다.
그러나 이후 퍼셉트론의 한계는 MLP라는 여러 개의 퍼셉트론을 쌓음으로써 어느 정도 해소되었다.
따라서 ANN 및 DL의 가장 중요한 진전은 다음 타임라인에서 설명할 수 있습니다.

우리는 이미 1943년과 1958년에 각각 인공 뉴런과 퍼셉트론이 어떻게 기반을 제공했는지 논의했습니다.

1969년에 Marvin Minsky와 Seymour Papert는 XOR을 선형적으로 분리할 수 없는 문제로 공식화했으며 이후 1974년에는 Paul Werbos가 퍼셉트론 훈련을 위한 역전파 알고리즘을 시연했습니다.
=====================================================
p78
그러나 가장 중요한 발전은 John Hopfield가 Hopfield 네트워크를 제안한 1982년에 일어났습니다.
그런 다음 신경망과 DL의 대부 중 한 명인 Hinton과 그의 팀은 1985년에 Boltzmann Machine을 제안했습니다.
그러나 1986년에 Geoffrey Hinton은 성공적으로 MLP를 훈련시켰고 Jordan M.I는 RNN을 제안했습니다.

같은 해에 Paul Smolensky는 Restricted Boltzmann Machine(RBM)이라고 하는 Boltzmann Machine의 개선된 버전도 제안했습니다.
그리고 1990년에 Lecun 등이 심층 신경망 구조인 LeNet을 제안했습니다.
간략히 살펴보려면 다음 다이어그램을 참조하십시오.

=====================================================
p80

90년대의 가장 중요한 해는 Jordan 등이 순환 신경망(RNN)을 제안한 1997년이었습니다.
같은 해에 Schuster 등은 LSTM(Long-Short Term Memory)의 개선된 버전과 양방향 RNN이라는 원래 RNN의 개선된 버전을 제안했습니다.

1997년부터 2005년까지 컴퓨팅의 상당한 발전에도 불구하고 우리는 많은 발전을 경험하지 못했습니다.
그리고 2006년에 Hinton은 그와 그의 팀이 여러 RBM을 쌓아서 DBN(Deep Belief Network)을 제안했을 때 다시 한 번 충격을 받았습니다.
그런 다음 2012년에 Hinton은 심층 신경망에서 정규화 및 과적합을 크게 개선한 드롭아웃을 발명했습니다.
그 후 Ian Goodfellow 등은 이미지 인식의 중요한 이정표인 GAN을 소개했습니다.
2017년 Hinton은 일반 CNN의 한계를 극복하기 위해 CapsNet을 제안했으며, 이는 지금까지 가장 주목할만한 이정표 중 하나입니다.
이 아키텍처에 대해서는 이 장의 뒷부분에서 설명합니다.

=====================================================
p81

ANN은 어떻게 학습합니까?
생물학적 뉴런의 개념을 기반으로 ANN이라는 용어와 아이디어가 생겨났습니다.

생물학적 뉴런과 유사하게 인공 뉴런은 다음으로 구성됩니다.

- 뉴런에서 신호를 집계하는 하나 이상의 수신 연결
- 신호를 다른 뉴런으로 전달하기 위한 하나 이상의 출력 연결
- 출력 신호의 수치를 결정하는 활성화 기능

뉴런의 상태 외에도 네트워크 내의 연결에 영향을 미치는 시냅스 가중치가 고려됩니다.
각 가중치는 뉴런 i와 뉴런 j를 연결하는 시냅스 가중치인 Wij로 표시되는 수치를 가집니다.
이제 각 뉴런 i에 대해 입력 벡터는 xi = (x1,x2,...xn)으로 정의할 수 있고 가중치 벡터는 wi = (wi1,xi2,...xin)으로 정의할 수 있습니다.

이제 뉴런의 위치에 따라 가중치와 출력 함수가 개별 뉴런의 동작을 결정합니다.
그런 다음 순방향 전파 중에 숨겨진 계층의 각 장치는 다음 신호를 받습니다.

[수식]

그럼에도 불구하고 가중치 중에는 바이어스 단위 b라는 특별한 유형의 가중치도 있습니다.
기술적으로 바이어스 장치는 이전 레이어에 연결되어 있지 않으므로 실제 활동이 없습니다.
그러나 여전히 편향 b 값은 신경망이 활성화 함수를 왼쪽이나 오른쪽으로 이동할 수 있도록 합니다.
바이어스 단위를 고려하여 수정된 네트워크 출력은 다음과 같이 공식화됩니다.

[수식]

앞의 방정식은 각 숨겨진 유닛이 입력의 합에 해당 가중치를 곱한 값을 얻는다는 것을 의미합니다. 
이를 합산 접합이라고 합니다.
그런 다음 합산 접합의 결과 출력은 다음 다이어그램과 같이 출력을 스쿼시하는 활성화 함수를 통해 전달됩니다.

앞의 방정식은 각 숨겨진 유닛이 입력의 합에 해당 가중치를 곱한 값을 얻는다는 것을 의미합니다. 
이를 합산 접합(Summing junction)이라고 합니다.
그런 다음 합산 접합의 결과 출력은 다음 다이어그램과 같이 출력을 스쿼시하는 활성화 함수를 통해 전달됩니다.

[그림] 

그러나 실용적인 신경망 아키텍처는 네트워크 구조를 구성하는 노드로 구성된 입력, 숨겨진 및 출력 레이어로 구성됩니다.
이전 다이어그램에 표시된 것처럼 여전히 인공 뉴런 모델의 작동 원리를 따릅니다.
입력 레이어는 실제 숫자의 피처와 픽셀 값이 있는 이미지와 같은 숫자 데이터만 허용합니다.
다음 다이어그램은 784개의 특징이 있는 데이터를 기반으로 다중 클래스 분류(즉, 10개 클래스) 문제를 해결하기 위한 신경망 아키텍처를 보여줍니다.

[그림]

여기서 숨겨진 레이어는 패턴을 학습하기 위해 대부분의 계산을 수행하고 네트워크는 손실 함수라는 특수 수학 함수를 사용하여 예측이 실제 출력과 비교하여 얼마나 정확한지 평가합니다.
그것은 다음과 같이 정의될 수 있는 복잡한 1 또는 매우 단순한 평균 제곱 오차일 수 있습니다.

[수식]

앞의 방정식에서는 네트워크에서 만든 예측이고 Y는 실제 또는 예상 출력을 나타냅니다.
마지막으로 오류가 더 이상 줄어들지 않으면 신경망이 수렴하여 출력 레이어를 통해 예측합니다.


==============================================
===========================================
================================
===================
============


==========================================================
p112

IoT에서의 이미지 인식

스마트 홈, 스마트 도시, 스마트 헬스케어를 포함한 많은 IoT 애플리케이션은 미래에 이미지 인식 기반 의사 결정(예: 스마트 도어 또는 잠금 장치의 안면 인식)을 광범위하게 사용할 것입니다.

머신 러닝(ML) 및 딥 러닝(DL) 알고리즘은 이미지 인식 및 의사 결정에 유용합니다.
결과적으로 IoT 애플리케이션에 매우 유망합니다.
이 장에서는 IoT 애플리케이션을 위한 실습 DL 기반 이미지 데이터 처리에 대해 설명합니다.

이 장의 첫 번째 부분에서는 다양한 IoT 응용 프로그램과 이미지 감지 기반 의사 결정에 대해 간략하게 설명합니다.
또한 실제 시나리오에서 IoT 애플리케이션과 이미지 감지 기반 구현에 대해 간략하게 설명합니다.
이 장의 두 번째 부분에서는 DL 알고리즘을 사용하여 응용 프로그램의 실제 이미지 감지 구현을 제시합니다.
이 장에서는 다음 주제를 다룹니다.

- IoT 응용 및 이미지 인식
- 사례 1: 이미지 기반 도로 결함 감지
- 사례 2: 이미지 기반 스마트 고형 폐기물 분리
- 사례 구현

- IoT에서 이미지 인식을 위한 전이 학습
- IoT 애플리케이션에서 이미지 인식을 위한 CNN
- 데이터 수집
- 데이터 전처리
- 모델 훈련
- 모델 평가

==========================================================
p113
IoT 애플리케이션 및 이미지 인식

IoT 애플리케이션의 이미지 인식 환경은 빠르게 변화하고 있습니다.
모바일 처리 능력, 에지 컴퓨팅 및 머신 러닝의 상당한 발전으로 많은 IoT 애플리케이션에서 이미지 인식이 널리 사용될 수 있는 길을 닦았습니다.
예를 들어, 고해상도 카메라가 장착된 편재 모바일 장치(많은 IoT 응용 프로그램의 핵심 구성 요소)는 모든 사람이 어디에서나 이미지 및 비디오 생성을 용이하게 합니다.

또한 IP 카메라 및 카메라가 장착된 라즈베리 파이와 같은 지능형 비디오 카메라는 스마트 홈, 캠퍼스 및 공장과 같은 여러 곳에서 다양한 용도로 사용됩니다.
스마트 도시, 스마트 홈, 스마트 건강, 스마트 교육, 스마트 공장 및 스마트 농업을 포함한 많은 IoT 애플리케이션은 이미지 인식/분류를 사용하여 의사 결정을 내립니다.

다음 다이어그램에 표시된 것처럼 이러한 애플리케이션은 다음 이미지 인식 서비스 중 하나 이상을 사용합니다.

==========================================================
p114

[그림]
iot 어플리케이션과 이미지 인식
- 사람 식별
스마트 홈/오피스 : 보안 및 액세스 메커니즘

- 물체 식별
스마트 시티 : 공공 자산 모니터링
자율주행차량

- 얼굴인식 
스마트 교육 : 맞춤형 교육
안전과 보안 : 범죄 식별

- 활동/이벤트 식별
스마트 농장 : 질병 탐지
스마트 헬스케어 : 질병 탐지
스마트 팩토리 : 재고 모니터링

이전 이미지에 대해 자세히 논의해 보겠습니다.

사람 식별:
일반적으로 가정, 사무실 및 기타 구내에 안전하고 친숙하게 접근하는 것은 어려운 작업입니다.
IoT 솔루션을 포함한 스마트 장치를 사용하면 많은 구내에 안전하고 친근하게 접근할 수 있습니다.
사무실 또는 집 액세스의 예를 살펴보겠습니다.
우리는 집이나 사무실에 하나 이상의 키 액세스를 사용합니다.
이러한 키를 분실하면 불편할 뿐만 아니라 다른 사람이 키를 찾으면 보안이 위험해질 수 있습니다.
이러한 맥락에서 이미지 인식 기반의 사람 식별은 스마트 홈이나 사무실의 키리스 액세스 방법으로 사용될 수 있습니다.

개체 식별:
IoT 기반 자동 개체 식별은 무인 자동차, 스마트 도시 및 스마트 공장을 비롯한 많은 영역에서 매우 바람직합니다.
예를 들어 스마트 차량 번호판 인식 및 차량 감지와 같은 스마트 시티 애플리케이션은 물론 도시 전체의 공공 자산 모니터링에서 이미지 인식 기반 객체 감지 서비스를 사용할 수 있습니다.
마찬가지로 스마트 팩토리는 재고 관리를 위해 객체 감지 서비스를 사용할 수 있습니다.

==========================================================
p115

안면 인식:
이미지 처리 기반의 얼굴 감지 및 인식 환경은 머지않아 상품화될 정도로 빠르게 변화하고 있습니다.
그러면 생체 인식 기능이 있는 스마트폰이 표준이 될 것입니다. 스마트폰과 IoT 기반 안면인식은 안전과 보안, 스마트 교육 등 다양한 분야에서 활용될 수 있다.
예를 들어, 스마트 수업(교육)에서 얼굴 인식 시스템을 사용하여 강의에 대한 응답을 식별할 수 있습니다.

이벤트 감지:
많은 인간 질병(예: 수족구병), 동물 질병(예: 구제역 및 가금류 질병) 및 식물 질병의 증상은 명백하고 가시적입니다.
이러한 질병은 DL 기반 이미지 분류와 통합된 IoT 솔루션을 사용하여 디지털 방식으로 감지할 수 있습니다.

==========================================================
p116

사례 1 – 이미지 기반 자동 결함 감지

도시의 공공 자산(예: 도로, 공공 건물 및 관광지)은 이질적이며 도시 내에 분산되어 있습니다.
전 세계 대부분의 도시는 이러한 자산을 모니터링, 결함 감지 및 보고하는 데 어려움을 겪고 있습니다.
예를 들어, 많은 영국 도시에서 시민들은 종종 결함을 보고하지만 보고의 정확성과 효율성은 많은 경우에 문제가 됩니다.
스마트 시티에서는 이러한 자산을 모니터링할 수 있으며 IoT 애플리케이션을 통해 장애를 감지하고 보고할 수 있습니다.
예를 들어, 하나 이상의 센서(예: 카메라 또는 마이크)가 부착된 차량(예: 시의회 차량)을 도로 결함 모니터링 및 감지에 사용할 수 있습니다.

도로는 도시의 중요한 자산이며 결함이 많습니다.
움푹 들어간 곳, 범프 및 거친 도로는 통근자와 차량이 경험하는 가장 실망스러운 위험 및 이상 현상 중 일부입니다.
중요한 것은 차량이 자주 서스펜션 문제, 조향 오정렬 및 펑크에 직면하여 사고로 이어질 수 있다는 것입니다.
==========================================================
p117
사용 사례 1 구현

다음 다이어그램에 표시된 대로 사용 사례의 구현은 세 가지 주요 요소로 구성됩니다.

[그림]
시의회 서버&딥러닝 모델 학습
오류 감지 및 보고를 위한 앱
센서 및 데이터 수집
도로 결함 및 기능


==========================================================
p118
구성 요소에 대해 자세히 알아보십시오.

센서 및 데이터 수집:
데이터 수집을 위한 센서 선택은 자산 및 결함 유형에 따라 다릅니다.
스마트폰을 에지 컴퓨팅 장치로 사용하면 스마트폰의 카메라를 도로 결함에 대한 감지 및 데이터 수집에 사용할 수 있습니다.
반대로 라즈베리 파이를 에지 컴퓨팅 장치로 사용하려면 라즈베리 파이 내부에 카메라가 내장되어 있지 않기 때문에 외부 카메라를 사용해야 합니다.
이전 다이어그램은 사용 사례 구현에 사용된 Raspberry Pi 및 카메라를 보여줍니다.
우리는 고정 초점 렌즈에 Omnivision OV5647 센서가 있는 1GB RAM 및 5메가픽셀 센서가 있는 Raspberry Pi 3 모델 B+를 사용했습니다.
카메라의 샘플링 또는 사진 촬영 속도는 차량의 속도와 도로 결함의 가용성에 따라 달라집니다.
예를 들어 스마트폰 카메라나 차량에 장착된 카메라가 1초에 한 장의 사진을 찍을 수 있다면 휴대폰이나 라즈베리 파이는 차량 속도가 40km/h 이하일 때 2초 안에 결함을 감지할 수 있을 것이다.
이미지가 감지되고 캡처되면 감지 방법으로 전송됩니다.

오류 감지 및 보고:
이 단계에서 에지 컴퓨팅 장치는 하나의 앱으로 설치됩니다.
스마트폰이나 Raspberry Pi에 설치된 앱에는 사전 훈련된 결함 감지 및 분류 모델이 로드됩니다.
차량의 스마트폰이나 라즈베리 파이 카메라가 사진을 찍으면(샘플링 비율에 따라) 이 모델들은 잠재적 결함을 감지 및 분류하고 애플리케이션 서버(지역 카운슬)에 보고합니다.

Council의 서버 및 결함 감지 모델:
의회 서버는 다음을 담당합니다.
- 참조 데이터셋을 활용한 장애 감지 및 분류 모델 학습 - 에지 컴퓨팅 장치용 모델 보급 및 업데이트
- 장애 데이터 수신 및 저장

이미지 기반 모델 학습 및 도로 결함 감지 검증이 구현의 핵심입니다.
이 장의 두 번째 부분(IoT에서 이미지 인식을 위한 전이 학습부터 시작하는 섹션에서 다룸)은 이전 사용 사례의 DL 기반 이상 감지 구현을 설명합니다.
필요한 모든 코드는 장의 코드 폴더에서 사용할 수 있습니다.
==========================================================
p119
==========================================================
p120
==========================================================
p121
==========================================================
p122
IoT에서 이미지 인식을 위한 전이 학습
일반적으로 전이 학습은 사전 훈련된 기계 학습 모델 표현을 다른 문제로 전이하는 것을 의미합니다.
최근 몇 년 동안 이것은 비교적 적은 데이터로 DL 모델을 교육할 수 있기 때문에 특히 이미지 처리 및 인식에서 문제에 DL 모델을 적용하는 인기 있는 수단이 되고 있습니다.

다음 다이어그램은 두 가지 모델을 보여줍니다.

- 표준 DL 모델을 위한 아키텍처(a)
- 전이 학습 DL 모델의 아키텍처(b):

[그림]

표준 DL 모델의 아키텍처 그림에서 볼 수 있듯이 완전히 훈련된 신경망은 
초기 레이어에서 입력 값을 가져온 다음 이 정보를 필요한 변환과 함께 순차적으로 전달하여
마지막에서 두 번째 레이어(병목 현상 계층)까지 전달합니다. 
(병목 현상 계층)은 보다 쉽게 최종 출력으로 변환할 수 있는 입력의 높은 수준 표현을 구성했습니다.
==========================================================
p123
모델의 전체 교육에는 각 연결에서 사용되는 가중치 및 편향 항의 최적화가 포함됩니다(파란색으로 표시됨).
크고 이질적인 데이터 세트에서 이러한 가중치 및 편향 항의 수는 수백만에 달할 수 있습니다.

전이 학습에서는 초기 및 중간 계층을 사용하고 후자 계층만 재훈련할 수 있습니다.
전이 학습에 대한 한 가지 인기 있는 접근 방식은 마지막 계층이 아닌 전체 네트워크에 대해 사전 훈련된 가중치를 재사용하고 새로운 데이터 세트를 사용하여 네트워크를 재훈련하여 마지막 계층 또는 분류 부분의 가중치를 다시 학습하는 것입니다.
TransferLearning DL 모델의 아키텍처 다이어그램에서 볼 수 있듯이 주황색 연결을 재사용하고 새 데이터 세트를 사용하여 네트워크를 재교육하여 마지막 계층의 녹색 연결을 학습했습니다.

Inception-v3 및 MobileNets 모델을 포함하여 사전 훈련된 많은 DL 모델을 전이 학습에 사용할 수 있습니다.
ImageNet Large Visual Recognition Challenge를 위해 훈련된 Inception-v3 모델은 이미지를 Zebra, Dalmatian 및 Diswasher와 같은 1,000개의 클래스로 분류합니다. Inception-v3는 두 부분으로 구성됩니다.
- 입력에서 변수를 추출하는 컨벌루션 신경망을 이용한 변수 추출 부분
- 1부에서 식별한 변수를 기반으로 입력 데이터를 분류하는 완전 연결 및 소프트맥스 계층이 있는 분류 부분

Inception-v3를 사용하려면 변수 추출부분을 재사용하고 데이터 세트로 분류 부분을 다시 훈련할 수 있습니다.

전이 학습은 두 가지 이점을 제공합니다.

- 새로운 데이터에 대한 교육이 더 빠릅니다.
- 처음부터 학습하는 것보다 적은 훈련 데이터로 문제를 해결하는 능력.

전이 학습의 이러한 기능은 리소스가 부족한 변수 추출부분을 교육할 필요가 없기 때문에
IoT의 리소스가 제한된 에지 장치에서 DL 모델을 구현하는 데 특히 유용합니다.
따라서 적은 계산 리소스와 시간을 사용하여 모델을 교육할 수 있습니다.

==========================================================
p124

IoT 애플리케이션의 이미지 인식을 위한 CNN

Convolutional Neural Network(CNN)는 구현 방식이 다릅니다.
AlexNet은 그러한 구현 중 하나이며 ImageNet Challenge: ILSVRC 2012에서 우승했습니다.
그 이후로 CNN은 컴퓨터 비전과 이미지 감지 및 분류 분야에서 편재하게 되었습니다.
2017년 4월까지 일반적인 추세는 더 높은 정확도를 달성하기 위해 더 깊고 복잡한 네트워크를 만드는 것이었습니다.

그러나 이러한 더 깊고 복잡한 네트워크는 향상된 정확도를 제공했지만 특히 크기와 속도 측면에서 네트워크를 항상 더 효율적으로 만들지는 못했습니다.
많은 실제 응용 프로그램, 특히 자율 주행 자동차 및 환자 모니터링과 같은 IoT 응용 프로그램에서 인식 작업은 리소스가 제한된(처리, 메모리) 플랫폼에서 적시에 수행되어야 합니다.

이러한 맥락에서 MobileNet V1은 2017년 4월에 도입되었습니다.
이 Mobilenet 버전은 2018년 4월 두 번째 버전(MobileNetV2)에서 개선된 것입니다.
모바일넷과 그 변형은 특히 이미지 인식 기반 IoT 애플리케이션을 위한 효율적인 CNN DL 모델의 IoT 애플리케이션입니다.
다음 단락에서는 MobileNets에 대한 간략한 개요를 제시합니다.

MobileNet은 가장 인기 있고 널리 사용되는 DL 모델, 즉 CNN을 구현한 것입니다.
리소스가 제한된 모바일 장치용으로 특별히 설계되어 분류, 감지 및 예측을 지원합니다.
DL 모델과 함께 설치된 스마트폰, 웨어러블 장치 및 스마트 워치를 포함한 개인용 모바일 장치는 보안, 개인 정보 보호 및 에너지 소비의 추가 이점과 함께 언제 어디서나 액세스를 제공하여 사용자 경험을 개선합니다.
중요한 점은 모바일 장치에서 새로 등장하는 응용 프로그램이 현실 세계와 실시간으로 상호 작용하기 위해서는 훨씬 더 효율적인 신경망이 필요하다는 것입니다.

다음 다이어그램은 표준 컨벌루션 필터(그림 a)가 Mobilenet V1에서 두 개의 레이어로 대체되는 방식을 보여줍니다.
깊이별 콘볼루션(그림 b)과 점별 콘볼루션(그림 c)을 사용하여 깊이별 분리 가능 필터를 만듭니다.



==========================================================
p125

[그림]

MobileNet V1의 주요 동기는 컨볼루션 레이어가 계산하는 데 비용이 많이 들고 소위 깊이 분리 가능한 컨볼루션으로 대체될 수 있다는 것입니다.

MobileNet V1에서 깊이별 컨벌루션 프로세스는 모든 입력 채널에 단일 필터를 사용하고 
점별 컨벌루션은 이전 깊이별 컨벌루션의 출력에 1 x 1 컨볼루션 프로세스를 사용합니다.

표준 컨볼루션 필터의 다이어그램에서 볼 수 있듯이 표준 컨볼루션은 입력을 필터링하고 결합하여 한 단계에서 새로운 출력 집합으로 만듭니다.
표준 CNN과 달리 MobileNets의 깊이별 분리 가능 컨볼루션(인수화)은 이를 필터링용 레이어와 결합용 별도 레이어의 두 레이어로 나눕니다(Mobilenet V1의 다이어그램 참조).

다음 다이어그램은 Mobilenet V1의 분해된 아키텍처를 나타냅니다.
이 분해는 모델이 훨씬 더 적은 수의 매개변수를 계산해야 하므로 계산 및 모델 크기를 크게 줄입니다.
예를 들어 MobileNet V1은 420만 개의 매개변수를 계산해야 하는 반면 전체 컨볼루션 네트워크는 2930만 개의 매개변수를 계산해야 합니다.













=============
chapter 3
3-1. Road's Fault Detection / MobileNet v1 
3-2.  Image-based smart solid waste separation / MobileNet v1 
501 glass / 594 paper / 403 cardboard/ 482 plastic / 410 metal / 137 trash

chapter 4
4-1. Voice Controlled Smart Light / MobileNet v1 
five commands, namele 'no', 'on,, 'off', 'stop', and 'yes'.
4-2. voice-controlled home access /MobileNet v1 

chapter 5
5. Indoor_Localization_IoT/ LSTM

chapter 6
6-1. Human Activity Recognition (HAR) / LSTM
Class Distribution : Walking: 424,400 (38.6%), Jogging: 342,177 (31.2%), Upstairs: 122,869 (11.2%)
Downstairs: 100,427 (9.1%), Sitting: 59,939 (5.5%), Standing: 48,395 (4.4%)
6-2. Smart Class Room (FER-based) / CNN
얼굴 표정에 나타난 감정에 따라 각 얼굴을 7가지 범주(0=화남, 1=혐오, 2=두려움, 3=행복, 4=슬픔, 5=놀람, 6=보통) 중 하나로 분류하는 것입니다.

chapter 7
7-1. Intelligent Host Intrusion Detection in IoT / LSTM
7-2. Network Intrusion Detection / AutoEncoder, Simple DNN

chapter 8
8. Predictive_Maintance_IoT/ RandomForest, LSTM

chapter 9
9-1. Remote Chronic Disease Management / CNN, LSTM
9-2.  IoT for Acne detection and Care / MobileNet V1


















































































































